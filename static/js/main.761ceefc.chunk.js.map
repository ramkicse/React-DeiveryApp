{"version":3,"sources":["logo.svg","OrderStatus.js","redux/reducers/OrderReducer.js","redux/reducers/FilterReducer.js","redux/store.js","redux/selector.js","redux/actions/orderActions.js","redux/actions/filterActions.js","redux/ReduxTest.js","Routes/MenuHeader.js","components/OrderForm.js","components/CreateOrder.js","components/OrderListItem.js","components/OrderList.js","components/Search.js","components/Dashboard.js","Routes/Footer.js","components/Help.js","components/Page404.js","components/EditOrder.js","components/OrderSummary.js","Routes/Routers.js","components/TestLifeCycle.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","OrderStatus","orderReducerDefaultState","id","uuid","personName","personMobile","personAddress","itemName","orderDate","moment","itemPrice","itemQty","itemStatus","filtersReducerDefaultSate","sortBy","store","createStore","combineReducers","orders","state","action","type","order","filter","map","updates","filters","console","log","applyMiddleware","logger","personNameMatch","toLowerCase","includes","personMobileMatch","personAddressMatch","itemNameMatch","orderDateMatch","sort","a","b","addOrder","setPersonNameFilter","setPersonMobileFilter","subscribe","getState","visibleExpences","getVisibleExpenses","ReduxTest","MenuHeader","className","to","activeClassName","exact","data-toggle","data-target","aria-controls","aria-expanded","aria-label","OrderForm","props","onPersonNameChange","e","target","value","setState","onPersonMobileChange","onPersonAddressChange","onItemNameChange","onItemPriceChange","onItemQtyChange","onFocusChange","focused","calendarFocused","onSubmit","preventDefault","error","parseFloat","title","this","removeButton","onClick","onRemove","buttonString","style","width","htmlFor","placeholder","autoFocus","onChange","required","rows","Component","CreateOrder","history","push","connect","undefined","dispatch","OrderListItem","renderIcon","bind","data","format","indian","class","aria-hidden","selector","marginBottom","key","setItemNameFilter","selected","Dashboard","Footer","href","Help","NotFoundPage","EditOrder","editOrder","onRemoveOrder","removeOrder","React","oldProps","find","match","params","total","Math","floor","margin","numwords","toUpperCase","Routers","path","component","OrderSummary","Page404","Content","newProps","newState","nextProps","nextState","prevProps","prevState","myNumber","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"yJAAAA,EAAOC,QAAU,IAA0B,kC,4ICE7BC,EACM,iBADNA,EAEQ,mBAFRA,EAGO,kBAHPA,EAIO,kB,iCCgDfC,EAhDa,CACf,CACIC,GAAIC,MACJC,WAAa,eACbC,aAAe,aACfC,cAAgB,OAChBC,SAAW,UACXC,UAAYC,MACZC,UAAY,UACZC,QAAU,EACVC,WAAaZ,GAEjB,CACIE,GAAIC,MACJC,WAAa,QACbC,aAAe,UACfC,cAAgB,QAChBC,SAAW,KACXC,UAAYC,MACZC,UAAY,SACZC,QAAU,EACVC,WAAaZ,GAEjB,CACIE,GAAIC,MACJC,WAAa,SACbC,aAAe,UACfC,cAAgB,QAChBC,SAAW,OACXC,UAAYC,MACZC,UAAY,SACZC,QAAU,EACVC,WAAaZ,GAEjB,CACIE,GAAIC,MACJC,WAAa,OACbC,aAAe,UACfC,cAAgB,QAChBC,SAAW,QACXC,UAAYC,MACZC,UAAY,SACZC,QAAU,EACVC,WAAaZ,IC5Cfa,EAA4B,CAC9BT,WAAY,GACZC,aAAc,GACdC,cAAe,GACfE,UAAW,GACXD,SAAU,GACVO,OAAQ,a,iBCAGC,EALDC,YAAYC,YAAgB,CACtCC,OFkDW,WAA+C,IAA9CC,EAA6C,uDAArClB,EAA0BmB,EAAW,uCACzD,OAAQA,EAAOC,MACX,IAAK,YACD,MAAM,GAAN,mBACOF,GADP,CAEIC,EAAOE,QAEf,IAAK,eAED,OAAOH,EAAMI,QAAO,qBAAGrB,KAAgBkB,EAAOlB,MAClD,IAAK,aACD,OAAOiB,EAAMK,KAAI,SAACF,GACd,OAAIA,EAAMpB,IAAMkB,EAAOlB,GACZ,2BACAoB,GACAF,EAAOK,SAIPH,KAGnB,QACI,OAAOH,IExEfO,QDMW,WAAgD,IAA/CP,EAA8C,uDAAtCN,EAA2BO,EAAW,uCAC1D,OAAQA,EAAOC,MACX,IAAK,yBACD,OAAO,2BACAF,GADP,IAEIf,WAAYgB,EAAOhB,aAE3B,IAAK,2BACD,OAAO,2BACAe,GADP,IAEId,aAAce,EAAOf,eAE7B,IAAK,4BACD,OAAO,2BACAc,GADP,IAEIb,cAAec,EAAOd,gBAE9B,IAAK,wBACD,OAAO,2BACAa,GADP,IAEIX,UAAWY,EAAOZ,YAE1B,IAAK,uBAED,OADAmB,QAAQC,IAAI,cAAeR,EAAOb,UAC3B,2BACAY,GADP,IAEIZ,SAAUa,EAAOb,WAGzB,IAAK,qBACD,OAAO,2BACAY,GADP,IAEIL,OAAQ,cAEhB,IAAK,qBACD,OAAO,2BACAK,GADP,IAEIL,OAAQ,cAEhB,IAAK,sBACD,OAAO,2BACAK,GADP,IAEIL,OAAQ,eAEhB,IAAK,oBACD,OAAO,2BACAK,GADP,IAEIL,OAAQ,aAEhB,QACI,OAAOK,MCvDfU,YAAgBC,MCRL,WAACZ,EAAD,GAAuF,IAA5Ed,EAA2E,EAA3EA,WAAYC,EAA+D,EAA/DA,aAAcC,EAAiD,EAAjDA,cAAeE,EAAkC,EAAlCA,UAAWD,EAAuB,EAAvBA,SAAUO,EAAa,EAAbA,OAGpF,OAAOI,EAAOK,QAAO,SAACD,GAElB,IAAMS,EAAkBT,EAAMlB,WAAW4B,cAAcC,SAAS7B,EAAW4B,eAErEE,EAAoBZ,EAAMjB,aAAa4B,SAAS5B,GAChD8B,EAAqBb,EAAMhB,cAAc0B,cAAcC,SAAS3B,EAAc0B,eAC9EI,EAAgBd,EAAMf,SAASyB,cAAcC,SAAS1B,EAASyB,eAE/DK,EAAsC,kBAAd7B,GAA0Bc,EAAMd,WAAaA,EAE3E,OAAOuB,GAAmBG,GAAqBC,GAAsBC,GAAiBC,KACvFC,MAAK,SAACC,EAAGC,GACR,MAAe,cAAX1B,EACOyB,EAAE/B,UAAYgC,EAAEhC,UAAY,GAAK,EACtB,cAAXM,EACAyB,EAAE7B,UAAY8B,EAAE9B,UAAY,GAAK,EACtB,eAAXI,EACAyB,EAAEnC,WAAaoC,EAAEpC,WAAa,GAAK,EACxB,aAAXU,EACAyB,EAAEhC,SAAWiC,EAAEjC,SAAW,GAAK,OADnC,MCjBFkC,EAAW,wEASpB,GAToB,IACpBrC,kBADoB,MACP,GADO,MAEpBC,oBAFoB,MAEL,GAFK,MAGpBC,qBAHoB,MAGJ,GAHI,MAIpBC,gBAJoB,MAIT,GAJS,MAKpBC,iBALoB,MAKRC,MALQ,MAMpBC,iBANoB,MAMR,EANQ,MAOpBC,eAPoB,MAOV,EAPU,MAQpBC,kBARoB,MAQPZ,EARO,QAUhB,CACIqB,KAAM,YACNC,MAAO,CACHpB,GAAIC,MACJC,aACAC,eACAC,gBACAC,WACAC,YACAE,YACAC,UACAC,gBCrBH8B,EAAsB,eAACtC,EAAD,uDAAc,GAAd,MAAsB,CACrDiB,KAAM,yBACNjB,eAkBSuC,EAAwB,SAAEtC,GAAF,MAAqB,CACtDgB,KAAM,2BACNhB,iBChBJU,EAAM6B,WAAU,WACZ,IAAMzB,EAAQJ,EAAM8B,WACdC,EAAkBC,EAAmB5B,EAAMD,OAAQC,EAAMO,SAC/DC,QAAQC,IAAIkB,MAkCDE,I,qBCVAC,EApCI,kBAEjB,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,iDACf,kBAAC,IAAD,CAASA,UAAU,yBAAyBC,GAAG,IAAIC,gBAAgB,YAAYC,OAAO,GAAtF,iBAGE,4BAAQH,UAAU,iBAAiB7B,KAAK,SAASiC,cAAY,WAAWC,cAAY,4BAA4BC,gBAAc,2BAA2BC,gBAAc,QAAQC,aAAW,qBACxL,0BAAMR,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BhD,GAAG,4BAC3C,wBAAIgD,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,IAAIC,gBAAgB,YAAYC,OAAO,GACtE,uBAAGH,UAAU,eADf,cAC2C,0BAAMA,UAAU,WAAhB,aAD3C,MAIF,wBAAIA,UAAU,YACd,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,UAAUC,gBAAgB,aAC3D,uBAAGF,UAAU,wBADb,aAKA,wBAAIA,UAAU,YACd,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,QAAQC,gBAAgB,aACzD,uBAAGF,UAAU,sBADb,gB,gCC6IKS,E,kDA7JX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAgBVC,mBAAqB,SAACC,GAClB,IAAM1D,EAAa0D,EAAEC,OAAOC,MAC5B,EAAKC,UAAS,iBAAO,CAAE7D,kBAnBR,EAsBnB8D,qBAAuB,SAACJ,GACpB,IAAMzD,EAAeyD,EAAEC,OAAOC,MAC9B,EAAKC,UAAS,iBAAO,CAAE5D,oBAxBR,EA0BnB8D,sBAAwB,SAACL,GACrB,IAAMxD,EAAgBwD,EAAEC,OAAOC,MAC/B,EAAKC,UAAS,iBAAO,CAAE3D,qBA5BR,EA8BnB8D,iBAAmB,SAACN,GAChB,IAAMvD,EAAWuD,EAAEC,OAAOC,MAC1B,EAAKC,UAAS,iBAAO,CAAE1D,gBAhCR,EAkCnB8D,kBAAoB,SAACP,GACjB,IAAMpD,EAAYoD,EAAEC,OAAOC,MAC3B,EAAKC,UAAS,iBAAO,CAAEvD,iBApCR,EAsCnB4D,gBAAkB,SAACR,GACf,IAAMnD,EAAUmD,EAAEC,OAAOC,MACzB,EAAKC,UAAS,iBAAO,CAAEtD,eAxCR,EA0CnB4D,cAAgB,YAAkB,IAAfC,EAAc,EAAdA,QACf,EAAKP,UAAS,iBAAO,CAAEQ,gBAAiBD,OA3CzB,EA8CnBE,SAAW,SAACZ,GACRA,EAAEa,iBAEG,EAAKxD,MAAMf,YAAe,EAAKe,MAAMd,cAAiB,EAAKc,MAAMT,WAAc,EAAKS,MAAMR,SAI3F,EAAKsD,UAAS,iBACV,CAAEW,MAAO,OAEb,EAAKhB,MAAMc,SAAS,CAChBtE,WAAY,EAAKe,MAAMf,WACvBC,aAAc,EAAKc,MAAMd,aACzBC,cAAe,EAAKa,MAAMb,cAC1BC,SAAU,EAAKY,MAAMZ,SACrBC,UAAWC,MACXC,UAAWmE,WAAW,EAAK1D,MAAMT,WACjCC,QAAS,EAAKQ,MAAMR,QACpBC,WAAYZ,KAdhB,EAAKiE,UAAS,iBAAO,CAAEW,MAAO,kEA/ClC,EAAKzD,MAAQ,CAETf,WAAYwD,EAAMtC,MAAQsC,EAAMtC,MAAMlB,WAAa,GACnDC,aAAcuD,EAAMtC,MAAQsC,EAAMtC,MAAMjB,aAAe,GACvDC,cAAesD,EAAMtC,MAAQsC,EAAMtC,MAAMhB,cAAgB,GACzDC,SAAUqD,EAAMtC,MAAQsC,EAAMtC,MAAMf,SAAW,GAC/CC,UAAWoD,EAAMtC,MAAQb,IAAOmD,EAAMtC,MAAMd,WAAa,GACzDE,UAAWkD,EAAMtC,MAAQsC,EAAMtC,MAAMZ,UAAY,GACjDC,QAASiD,EAAMtC,MAAQsC,EAAMtC,MAAMX,QAAU,GAC7CiE,MAAO,GACPH,iBAAiB,GAbN,E,qDA2Ef,IAAMK,EAAQC,KAAKnB,MAAMkB,MAAQC,KAAKnB,MAAMkB,MAAQ,qBAC9CE,EAAeD,KAAKnB,MAAMkB,MAAQ,4BAAQG,QAASF,KAAKnB,MAAMsB,SAAUhC,UAAU,6BAAhD,gBAAoG,GACtIiC,EAAeJ,KAAKnB,MAAMkB,MAAQ,mBAAqB,qBAE7D,OAGI,yBAAK5B,UAAU,YAAYkC,MAAO,CAAEC,MAAO,QACvC,yBAAKnC,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,qCACX,uBAAGA,UAAU,sBADjB,IAC2C4B,GAE3C,yBAAK5B,UAAU,aACX,yBAAKA,UAAU,sBACV6B,KAAK5D,MAAMyD,OAAS,2BAAIG,KAAK5D,MAAMyD,QAExC,0BAAMF,SAAUK,KAAKL,UACjB,yBAAKxB,UAAU,cACX,2BAAOoC,QAAQ,QAAf,QACA,2BAAOjE,KAAK,OAAO6B,UAAU,eAAeqC,YAAY,wBACpDC,WAAS,EACTxB,MAAOe,KAAK5D,MAAMf,WAClBqF,SAAUV,KAAKlB,mBAAoB6B,UAAQ,KAEnD,yBAAKxC,UAAU,cACX,2BAAOoC,QAAQ,SAAf,UACA,2BAAOjE,KAAK,OAAO6B,UAAU,eAAeqC,YAAY,0BACpDvB,MAAOe,KAAK5D,MAAMd,aAClBoF,SAAUV,KAAKb,wBAGvB,yBAAKhB,UAAU,cACX,2BAAOoC,QAAQ,WAAf,WACA,8BAAUpC,UAAU,eAAehD,GAAG,UAAUyF,KAAK,IAAI3B,MAAOe,KAAK5D,MAAMb,cACvEmF,SAAUV,KAAKZ,sBACfoB,YAAY,oBAAoBG,UAAQ,KAEhD,yBAAKxC,UAAU,cACX,2BAAOoC,QAAQ,SAAf,aACA,2BAAOjE,KAAK,OAAO6B,UAAU,eAAeqC,YAAY,sBACpDvB,MAAOe,KAAK5D,MAAMZ,SAClBkF,SAAUV,KAAKX,oBAGvB,yBAAKlB,UAAU,cACX,2BAAOoC,QAAQ,SAAf,cACA,2BAAOjE,KAAK,OAAO6B,UAAU,eAAeqC,YAAY,uBACpDvB,MAAOe,KAAK5D,MAAMT,UAClB+E,SAAUV,KAAKV,qBAGvB,yBAAKnB,UAAU,cACX,2BAAOoC,QAAQ,SAAf,iBACA,2BAAOjE,KAAK,OAAO6B,UAAU,eAAeqC,YAAY,0BACpDvB,MAAOe,KAAK5D,MAAMR,QAClB8E,SAAUV,KAAKT,mBAGvB,yBAAKpB,UAAU,WACX,4BAAQ7B,KAAK,SAAS6B,UAAU,8BAA8BiC,GAI7DH,a,GA7IjBY,aCFlBC,E,4MAGFnB,SAAW,SAACpD,GACR,EAAKsC,MAAMnB,SAASnB,GACpB,EAAKsC,MAAMkC,QAAQC,KAAK,M,uDAGxB,OACI,6BACI,kBAAC,EAAD,CAAWrB,SAAYK,KAAKL,gB,GAVlBkB,aA2BXI,mBAAQC,GANI,SAACC,GAAD,MAAe,CACtCzD,SAAW,SAACnB,GAAD,OAAW4E,EAASzD,EAASnB,QAK7B0E,CAAsCH,G,uCCtB/CM,E,kDACF,WAAYvC,GAAQ,IAAD,8BACf,cAAMA,IAEDwC,WAAa,EAAKA,WAAWC,KAAhB,gBAHH,E,uDAWRC,GAGP,OAAIA,EAAKA,OAAStG,EACP,0BAAMkD,UAAU,uBAAuBoD,EAAKA,MACjDA,EAAKA,OAAStG,EACT,0BAAMkD,UAAU,oBAAoBoD,EAAKA,MAC9CA,EAAKA,OAAStG,EACT,0BAAMkD,UAAU,uBAAuBoD,EAAKA,MACjDA,EAAKA,OAAStG,EACT,0BAAMkD,UAAU,yBAAyBoD,EAAKA,WADvD,I,+BAQF,OACI,4BACI,4BAAI,kBAAC,IAAD,CAAMnD,GAAE,gBAAW4B,KAAKnB,MAAM1D,KAC7B6E,KAAKnB,MAAMxD,YADhB,KAGA,4BAAK2E,KAAKnB,MAAMrD,UAChB,4BACKE,IAAOsE,KAAKnB,MAAMpD,WAAW+F,OAAO,iBAMzC,sCACaC,IAAOD,OAAOxB,KAAKnB,MAAMlD,YAEtC,4BAAKqE,KAAKnB,MAAMjD,SAChB,4BACKoE,KAAKqB,WAAW,CAAEE,KAAMvB,KAAKnB,MAAMhD,cAGxC,4BAAI,kBAAC,IAAD,CAAMuC,GAAE,mBAAc4B,KAAKnB,MAAM1D,KACrC,uBAAGuG,MAAM,cAAcC,cAAY,UADnC,U,GAlDYd,aA+DbI,gBAAUG,GCrBVH,eANS,SAAC7E,GACrB,MAAO,CACHD,OAAQyF,EAASxF,EAAMD,OAAQC,EAAMO,YAI9BsE,EAjDG,SAACpC,GAAD,OAEd,yBAAKV,UAAU,MAAMkC,MAAO,CAAEwB,aAAc,SACxC,yBAAK1D,UAAU,OACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,qCAAoC,uBAAGA,UAAU,oBAAhE,kBAEA,yBAAKA,UAAU,aAEX,2BAAOA,UAAU,uCACb,+BACI,4BACI,2CACA,oCACA,0CACA,qCACA,mCACA,sCACA,yCAGR,+BAEKU,EAAM1C,OAAOM,KAAI,SAACF,GAAD,OACd,kBAAC,EAAD,eAAeuF,IAAKvF,EAAMpB,IAAQoB,gBC4FnD0E,eANS,SAAC7E,GACrB,MAAO,CACHO,QAASP,EAAMO,WAIRsE,EAnHA,SAACpC,GAAD,OAGX,yBAAKV,UAAU,MAAMkC,MAAO,CAAEwB,aAAc,SACxC,yBAAK1D,UAAU,OAEX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,qCAAoC,uBAAGA,UAAU,oBAAhE,kBAEA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,MAAMkC,MAAO,CAAEwB,aAAc,QACxC,yBAAK1D,UAAU,OAGX,0BAAMA,UAAU,eACZ,gDADJ,YAEI,2BAAOA,UAAU,eAAe7B,KAAK,OAAOkE,YAAY,SAAS7B,aAAW,SACxE+B,SAAU,SAAC3B,GACPF,EAAMsC,SAASxD,EAAoBoB,EAAEC,OAAOC,aAI5D,yBAAKd,UAAU,OACX,0BAAMA,UAAU,eACZ,+CADJ,YAMI,2BAAOA,UAAU,eAAe7B,KAAK,OAAOkE,YAAY,SAAS7B,aAAW,SACxE+B,SAAU,SAAC3B,GAEPnC,QAAQC,IAAInB,IAAOqD,EAAEC,OAAOC,QAC5BJ,EAAMsC,SP5BE,CAChD7E,KAAM,wBACNb,UO0B0EC,IAAOqD,EAAEC,OAAOC,eAKtE,yBAAKd,UAAU,MAAMkC,MAAO,CAAEwB,aAAc,QACxC,yBAAK1D,UAAU,OACX,0BAAMA,UAAU,eACZ,8CADJ,YAEI,2BAAOA,UAAU,eAAe7B,KAAK,OAAOkE,YAAY,SAAS7B,aAAW,SACxE+B,SAAU,SAAC3B,GACPnC,QAAQC,IAAIkC,EAAEC,OAAOC,OACrBJ,EAAMsC,SPjCjB,eAAE3F,EAAF,uDAAa,GAAb,MAAqB,CAClDc,KAAM,uBACNd,YO+BuDuG,CAAkBhD,EAAEC,OAAOC,aAI1D,yBAAKd,UAAU,OACX,0BAAMA,UAAU,eACZ,2CADJ,YAEI,2BAAOA,UAAU,eAAe7B,KAAK,OAAOkE,YAAY,SAAS7B,aAAW,SACxE+B,SAAU,SAAC3B,GACPnC,QAAQC,IAAIkC,EAAEC,OAAOC,OACrBJ,EAAMsC,SAASvD,EAAsBmB,EAAEC,OAAOC,cAKlE,yBAAKd,UAAU,MAAMkC,MAAO,CAAEwB,aAAc,QACxC,yBAAK1D,UAAU,OACX,0BAAMA,UAAU,eACZ,4CADJ,YAEI,2BAAOA,UAAU,eAAe7B,KAAK,OAAOkE,YAAY,SAAS7B,aAAW,SACxE+B,SAAU,SAAC3B,GACPnC,QAAQC,IAAIkC,EAAEC,OAAOC,OACrBJ,EAAMsC,SP3CU,CACxD7E,KAAM,4BACNf,cOyC8EwD,EAAEC,OAAOC,aAI/D,yBAAKd,UAAU,OACX,0BAAMA,UAAU,eACZ,4CADJ,YAEZ,4BAAQA,UAAU,gCACEc,MAAOJ,EAAMlC,QAAQZ,OACrB2E,SAAU,SAAC3B,GACgB,cAAnBA,EAAEC,OAAOC,MACTJ,EAAMsC,SP9ChB,CAClC7E,KAAM,uBO8CgE,UAAnByC,EAAEC,OAAOC,MAChBJ,EAAMsC,SP3ChB,CAClC7E,KAAM,uBO2CgE,gBAAnByC,EAAEC,OAAOC,MAChBJ,EAAMsC,SPzCf,CACnC7E,KAAM,wBOyCgE,cAAnByC,EAAEC,OAAOC,OAChBJ,EAAMsC,SPvCjB,CACjC7E,KAAM,wBO0C8B,4BAAQ0F,UAAQ,GAAhB,kBACA,4BAAQ/C,MAAM,aAAd,aACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,aAAd,yBCrFzBgD,MAVf,WACI,OACI,yBAAK9D,UAAU,YAAYkC,MAAO,CAAEC,MAAO,QAEvC,kBAAC,EAAD,MACA,kBAAC,EAAD,QCQG4B,EAfA,kBAEX,yBAAK/D,UAAU,0BAChB,yBAAKA,UAAU,aACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,yBACd,yBAAKA,UAAU,aACd,mCAAK,sCAAL,IAAuB,uBAAGgE,KAAK,IAAIhE,UAAU,cAAtB,gBAAvB,+BCDQiE,EANF,kBACT,6BACI,2CCgBOC,EAjBM,kBACnB,yBAAKX,MAAM,gDACX,yBAAKA,MAAM,aACP,yBAAKA,MAAM,8BACP,yBAAKA,MAAM,yBACP,0BAAMA,MAAM,qBAAZ,OACA,yBAAKA,MAAM,aAAX,+CACA,kBAAC,IAAD,CAASvD,UAAU,WAAWC,GAAG,IAAIC,gBAAgB,aACzD,uBAAGF,UAAU,eADT,uBCJRmE,E,4MAEF3C,SAAW,SAACpD,GACR,EAAKsC,MAAM0D,UAAU,EAAK1D,MAAMtC,MAAMpB,GAAIoB,GAC1C,EAAKsC,MAAMkC,QAAQC,KAAK,M,EAG5BwB,cAAgB,WAEZ,EAAK3D,MAAM4D,YAAY,EAAK5D,MAAMtC,MAAMpB,IACxC,EAAK0D,MAAMkC,QAAQC,KAAK,M,uDAGxB,OACI,6BAEI,kBAAC,EAAD,CAAWjB,MAAM,sBACbxD,MAAOyD,KAAKnB,MAAMtC,MAClBoD,SAAUK,KAAKL,SACfQ,SAAYH,KAAKwC,qB,GAnBbE,IAAM7B,WAqCfI,eAVS,SAAC7E,EAAOuG,GAAR,MAAsB,CAC1CpG,MAAOH,EAAMD,OAAOyG,MAAK,SAACrG,GAAD,OAAWA,EAAMpB,KAAOwH,EAASE,MAAMC,OAAO3H,UAIhD,SAACgG,EAAUtC,GAAX,MAAsB,CAC7C0D,UAAW,SAACpH,EAAIoB,GAAL,OAAe4E,EbDL,SAAChG,EAAIuB,GAAL,MAAkB,CACvCJ,KAAM,aACNnB,KACAuB,WaFmC6F,CAAUpH,EAAIoB,KACjDkG,YAAa,SAACtH,GAAD,OAAQgG,EbRC,SAAEhG,GAAF,MAAW,CACjCmB,KAAM,eACNnB,MaM8BsH,CAAYtH,QAG/B8F,CAA6CqB,G,iBC+D5D,IAKerB,eALS,SAAC7E,EAAOuG,GAAR,MAAsB,CAC1CpG,MAAOH,EAAMD,OAAOyG,MAAK,SAACrG,GAAD,OAAWA,EAAMpB,KAAOwH,EAASE,MAAMC,OAAO3H,SAI5D8F,EAzGf,SAAsBpC,GAElB,IAAIA,EAAMtC,MAEN,OADAsC,EAAMkC,QAAQC,KAAK,KACZ,KAEXpE,QAAQC,IAAI,YAAYgC,EAAMtC,OAC9B,IAAMwG,EAAQC,KAAKC,MAAMpE,EAAMtC,MAAMZ,UAAYkD,EAAMtC,MAAMX,SAI7D,OAHAgB,QAAQC,IAAIkG,GAKR,6BAAS5E,UAAU,0BAA0BkC,MAAO,CAAEC,MAAO,MAAO4C,OAAQ,SACxE,6BAAS/E,UAAU,WAEf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eACV,uBAAGA,UAAU,gBADjB,iBAEY,2BAAOA,UAAU,cAAjB,UAKpB,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,wBAAf,OAEY,iCACJ,uCAGR,yBAAKA,UAAU,wBAAf,KAEY,iCACJ,gCACKU,EAAMtC,MAAMlB,YAEjB,6BAJI,WAMKwD,EAAMtC,MAAMhB,gBAG7B,yBAAK4C,UAAU,wBACX,uCAAe,6BACf,6BACA,wCAHJ,IAGsBU,EAAMtC,MAAMpB,GAAG,+BAKzC,yBAAKgD,UAAU,OACX,yBAAKA,UAAU,8BACX,2BAAOA,UAAU,uBACb,+BACI,4BACI,yCACA,mCACA,qCACA,4CAGR,+BAGI,4BACI,4BAAKU,EAAMtC,MAAMf,UACjB,4BAAKqD,EAAMtC,MAAMX,SACjB,4BAAKiD,EAAMtC,MAAMZ,WACjB,4BAAKkD,EAAMtC,MAAMZ,UAAYkD,EAAMtC,MAAMX,cAO7D,yBAAKuC,UAAU,OACX,yBAAKA,UAAU,aAEX,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,SACb,+BAGI,4BACI,sCACA,4BAAI,mCAAQ,2BAAIgF,IAASJ,GAAOK,cAApB,wBC/DrCC,GAjBC,kBAChB,kBAAC,IAAD,KACE,6BACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWtB,EAAW3D,OAAO,IAC7C,kBAAC,IAAD,CAAOgF,KAAK,UAAUC,UAAWzC,IAChC,kBAAC,IAAD,CAAOwC,KAAK,YAAYC,UAAWjB,IACnC,kBAAC,IAAD,CAAOgB,KAAK,eAAeC,UAAWC,IACvC,kBAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWnB,IAC/B,kBAAC,IAAD,CAAOmB,UAAWE,KAEpB,kBAAC,EAAD,SCDIC,IArBsBhB,IAAM7B,U,mLAuB5BjE,QAAQC,IAAI,2B,0CAGZD,QAAQC,IAAI,0B,gDAEW8G,GACvB/G,QAAQC,IAAI,mC,4CAEO8G,EAAUC,GAC7B,OAAO,I,0CAEUC,EAAWC,GAC5BlH,QAAQC,IAAI,4B,yCAEIkH,EAAWC,GAC3BpH,QAAQC,IAAI,2B,6CAGZD,QAAQC,IAAI,6B,+BAGZ,OACG,6BACG,4BAAKmD,KAAKnB,MAAMoF,e,GAzBNvB,IAAM7B,YCFbqD,OAXf,WACE,OACE,kBAAC,IAAD,CAAUlI,MAAOA,GACjB,6BAEE,kBAAC,GAAD,SCHcmI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzB,MACvB,2DCZN0B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArF,GACLjD,QAAQiD,MAAMA,EAAMsF,c","file":"static/js/main.761ceefc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","//Order received, order in proces, order delivered, order completed)\r\n\r\nexport const  OrderStatus = {\r\n    ORDER_RECEIVED: 'Order Received',\r\n    ORDER_IN_PROCESS: 'Order in Process',\r\n    ORDER_DELIVERED: 'Order Delivered',\r\n    ORDER_COMPLETED: 'Order Completed'\r\n}","import * as  OrderStatus  from '../../OrderStatus';\r\nimport uuid from 'uuid';\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nconst sampleDate = [\r\n    {\r\n        id: uuid(),\r\n        personName : 'Ramakrishnan',\r\n        personMobile : '8605429395',\r\n        personAddress : 'Pune',\r\n        itemName : 'Mac Pro',\r\n        orderDate : moment(),\r\n        itemPrice : 150000.75,\r\n        itemQty : 2,\r\n        itemStatus : OrderStatus.OrderStatus.ORDER_COMPLETED\r\n    },\r\n    {\r\n        id: uuid(),\r\n        personName : 'Kumar',\r\n        personMobile : '2423424',\r\n        personAddress : 'Salem',\r\n        itemName : 'PC',\r\n        orderDate : moment(),\r\n        itemPrice : 75000.25,\r\n        itemQty : 1,\r\n        itemStatus : OrderStatus.OrderStatus.ORDER_IN_PROCESS\r\n    },\r\n    {\r\n        id: uuid(),\r\n        personName : 'Rajesh',\r\n        personMobile : '2423424',\r\n        personAddress : 'Salem',\r\n        itemName : 'Unix',\r\n        orderDate : moment(),\r\n        itemPrice : 50000.25,\r\n        itemQty : 1,\r\n        itemStatus : OrderStatus.OrderStatus.ORDER_DELIVERED\r\n    },\r\n    {\r\n        id: uuid(),\r\n        personName : 'Anil',\r\n        personMobile : '2423424',\r\n        personAddress : 'Salem',\r\n        itemName : 'Linux',\r\n        orderDate : moment(),\r\n        itemPrice : 40000.25,\r\n        itemQty : 1,\r\n        itemStatus : OrderStatus.OrderStatus.ORDER_RECEIVED\r\n    }\r\n]\r\n\r\n\r\nconst orderReducerDefaultState = sampleDate;\r\n\r\n\r\nexport default (state = orderReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_ORDER':\r\n            return [\r\n                ...state,\r\n                action.order\r\n            ];\r\n        case 'REMOVE_ORDER':\r\n           \r\n            return state.filter(({ id }) => id !== action.id);\r\n        case 'EDIT_ORDER':\r\n            return state.map((order) => {\r\n                if (order.id == action.id) {\r\n                    return {\r\n                        ...order,\r\n                        ...action.updates\r\n                    }\r\n                }\r\n                else {\r\n                    return order;\r\n                }\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","\r\n//Filters : PersonName, OrderDate, ItemName, Mobile, Address\r\n//Sorting : orderdate, price,personname, itemname \r\n\r\n\r\nconst filtersReducerDefaultSate = {\r\n    personName: '',\r\n    personMobile: '',\r\n    personAddress: '',\r\n    orderDate: '',\r\n    itemName: '',\r\n    sortBy: 'orderDate'\r\n};\r\n\r\nexport default (state = filtersReducerDefaultSate, action) => {\r\n    switch (action.type) {\r\n        case 'SET_PERSON_NAME_FILTER':\r\n            return {\r\n                ...state,\r\n                personName: action.personName\r\n            }\r\n        case 'SET_PERSON_MOBILE_FILTER':\r\n            return {\r\n                ...state,\r\n                personMobile: action.personMobile\r\n            }\r\n        case 'SET_PERSON_ADDRESS_FILTER':\r\n            return {\r\n                ...state,\r\n                personAddress: action.personAddress\r\n            }\r\n        case 'SET_ORDER_DATE_FILTER':\r\n            return {\r\n                ...state,\r\n                orderDate: action.orderDate\r\n            }\r\n        case 'SET_ITEM_NAME_FILTER':\r\n            console.log('item_name :', action.itemName)\r\n            return {\r\n                ...state,\r\n                itemName: action.itemName\r\n            }\r\n\r\n        case 'SORT_BY_ORDER_DATE':\r\n            return {\r\n                ...state,\r\n                sortBy: 'orderDate'\r\n            }\r\n        case 'SORT_BY_ITEM_PRICE':\r\n            return {\r\n                ...state,\r\n                sortBy: 'itemPrice'\r\n            }\r\n        case 'SORT_BY_PERSON_NAME':\r\n            return {\r\n                ...state,\r\n                sortBy: 'personName'\r\n            }\r\n        case 'SORT_BY_ITEM_NAME':\r\n            return {\r\n                ...state,\r\n                sortBy: 'itemName'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\n\r\nimport orderReducer from './reducers/OrderReducer'\r\nimport filterReducer from './reducers/FilterReducer'\r\nimport logger from 'redux-logger'\r\n\r\nconst store = createStore(combineReducers({\r\n    orders: orderReducer,\r\n    filters: filterReducer\r\n}), applyMiddleware(logger))\r\n\r\nexport default store","\r\nexport default (orders, { personName, personMobile, personAddress, orderDate, itemName, sortBy }) => {\r\n    \r\n    //console.log(\"orders\",orders)\r\n    return orders.filter((order) => {\r\n\r\n        const personNameMatch = order.personName.toLowerCase().includes(personName.toLowerCase());\r\n\r\n        const personMobileMatch = order.personMobile.includes(personMobile);\r\n        const personAddressMatch = order.personAddress.toLowerCase().includes(personAddress.toLowerCase());\r\n        const itemNameMatch = order.itemName.toLowerCase().includes(itemName.toLowerCase());\r\n\r\n        const orderDateMatch = typeof orderDate !== 'number' || order.orderDate >= orderDate;\r\n\r\n        return personNameMatch && personMobileMatch && personAddressMatch && itemNameMatch && orderDateMatch;\r\n    }).sort((a, b) => {\r\n        if (sortBy === 'orderDate') {\r\n            return a.orderDate < b.orderDate ? 1 : -1;\r\n        } else if (sortBy === 'itemPrice') {\r\n            return a.itemPrice < b.itemPrice ? 1 : -1;\r\n        } else if (sortBy === 'personName') {\r\n            return a.personName > b.personName ? 1 : -1;\r\n        } else if (sortBy === 'itemName') {\r\n            return a.itemName > b.itemName ? 1 : -1;\r\n        }\r\n    });\r\n};\r\n","import uuid from 'uuid';\r\nimport moment from 'moment'\r\nimport * as  OrderStatus  from '../../OrderStatus';\r\n\r\n\r\nexport const addOrder = ({\r\n    personName = '',\r\n    personMobile = '',\r\n    personAddress = '',\r\n    itemName = '',\r\n    orderDate = moment(),\r\n    itemPrice = 0.0,\r\n    itemQty = 0,\r\n    itemStatus = OrderStatus.OrderStatus.ORDER_RECEIVED\r\n} = {}) => (\r\n        {\r\n            type: 'ADD_ORDER',\r\n            order: {\r\n                id: uuid(),\r\n                personName,\r\n                personMobile,\r\n                personAddress,\r\n                itemName,\r\n                orderDate,\r\n                itemPrice,\r\n                itemQty,\r\n                itemStatus\r\n            }\r\n\r\n        })\r\n\r\n// REMOVE_ORDER\r\nexport const removeOrder= ( id ) => ({\r\n    type: 'REMOVE_ORDER',\r\n    id\r\n});\r\n\r\n// EDIT_EXPENSE\r\nexport const editOrder = (id, updates) => ({\r\n    type: 'EDIT_ORDER',\r\n    id,\r\n    updates\r\n})\r\n","// / \r\n//Filters : PersonName, OrderDate, ItemName, Mobile, Address\r\n\r\n\r\n// SET_PERSON_NAME_FILTER\r\nexport const setPersonNameFilter = (personName = '') => ({\r\n    type: 'SET_PERSON_NAME_FILTER',\r\n    personName\r\n})\r\n\r\n\r\n// SET_ORDER_DATE_FILTER\r\nexport const setOrderDateFilter = ( orderDate ) => ({\r\n    type: 'SET_ORDER_DATE_FILTER',\r\n    orderDate\r\n})\r\n\r\n\r\n// SET_ITEM_NAME_FILTER\r\nexport const setItemNameFilter = ( itemName = '') => ({\r\n    type: 'SET_ITEM_NAME_FILTER',\r\n    itemName\r\n})\r\n\r\n// SET_PERSON_MOBILE_FILTER\r\nexport const setPersonMobileFilter = ( personMobile ) => ({\r\n    type: 'SET_PERSON_MOBILE_FILTER',\r\n    personMobile\r\n})\r\n\r\n// SET_PERSON_ADDRESS_FILTER\r\nexport const setPersonAddressFilter = ( personAddress ) => ({\r\n    type: 'SET_PERSON_ADDRESS_FILTER',\r\n    personAddress\r\n})\r\n\r\n\r\n//Sorting : orderdate, price,personname, itemname \r\n// SORT_BY_ORDER_DATE\r\nexport const sortByOrderDate = () => ({\r\n    type: 'SORT_BY_ORDER_DATE'\r\n})\r\n\r\n// SORT_BY_ITEM_PRICE\r\nexport const sortByItemPrice = () => ({\r\n    type: 'SORT_BY_ITEM_PRICE'\r\n})\r\n// SORT_BY_PERSON_NAME\r\nexport const sortByPersonName = () => ({\r\n    type: 'SORT_BY_PERSON_NAME'\r\n})\r\n// SORT_BY_ITEM_NAME\r\nexport const sortByItemName = () => ({\r\n    type: 'SORT_BY_ITEM_NAME'\r\n})\r\n","import React from 'react'\r\n\r\nimport store from './store'\r\nimport moment from 'moment'\r\n\r\n\r\nimport getVisibleExpenses from './selector'\r\nimport { addOrder } from './actions/orderActions';\r\nimport * as  OrderStatus  from '../OrderStatus';\r\nimport { setPersonMobileFilter, setPersonNameFilter } from './actions/filterActions';\r\n\r\nstore.subscribe(() => {\r\n    const state = store.getState();\r\n    const visibleExpences = getVisibleExpenses(state.orders, state.filters)\r\n    console.log(visibleExpences)\r\n})\r\n\r\nfunction ReduxTest() {\r\n    const firstExpence = store.dispatch(addOrder({\r\n        personName : 'Ramakrishnna',\r\n        personMobile : '8605429395',\r\n        personAddress : 'Pune',\r\n        itemName :'PC',\r\n        orderDate : moment(),\r\n        itemPrice : 50000.0,\r\n        itemQty : 2,\r\n        itemStatus : OrderStatus.OrderStatus.ORDER_RECEIVED\r\n    }));\r\n    store.dispatch(addOrder({\r\n        personName : 'Ram',\r\n        personMobile : '94044030',\r\n        personAddress : 'Salem',\r\n        itemName :'Mac',\r\n        orderDate : moment(),\r\n        itemPrice : 150000.0,\r\n        itemQty : 1,\r\n        itemStatus : OrderStatus.OrderStatus.ORDER_COMPLETED\r\n    }));\r\n    store.dispatch(setPersonNameFilter('Ram'));\r\n    store.dispatch(setPersonMobileFilter({personMobile:'860'}));\r\n\r\n    return (\r\n        <div>\r\n            <h1>Reduct Test Code</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReduxTest\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nconst MenuHeader = () => (\r\n\r\n  <div className=\"container mt-4\">\r\n    <nav className=\"mb-4 navbar navbar-expand-lg navbar-dark cyan\">\r\n    <NavLink className=\"navbar-brand font-bold\" to=\"/\" activeClassName=\"is-active\" exact={true}>\r\n    Delivery App </NavLink>\r\n\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-4\" aria-controls=\"navbarSupportedContent-4\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-4\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item active\">\r\n            <NavLink className=\"nav-link\" to=\"/\" activeClassName=\"is-active\" exact={true}>\r\n              <i className=\"fa fa-home\"></i> Dashboard <span className=\"sr-only\">(current)</span> </NavLink>\r\n\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" to=\"/create\" activeClassName=\"is-active\">\r\n          <i className=\"fa fa-shopping-cart\"></i> Orders </NavLink>\r\n            \r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n          <NavLink className=\"nav-link\" to=\"/help\" activeClassName=\"is-active\">\r\n          <i className=\"fa fa-info-circle\"></i> Help </NavLink>\r\n            \r\n          </li>\r\n          \r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n\r\n)\r\n\r\nexport default MenuHeader","\r\nimport React, { Component } from 'react';\r\n\r\nimport * as  OrderStatus from '../OrderStatus';\r\n\r\n\r\nimport moment from 'moment'\r\n\r\n\r\nclass OrderForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            personName: props.order ? props.order.personName : '',\r\n            personMobile: props.order ? props.order.personMobile : '',\r\n            personAddress: props.order ? props.order.personAddress : '',\r\n            itemName: props.order ? props.order.itemName : '',\r\n            orderDate: props.order ? moment(props.order.orderDate) : '',\r\n            itemPrice: props.order ? props.order.itemPrice : '',\r\n            itemQty: props.order ? props.order.itemQty : '',\r\n            error: '',\r\n            calendarFocused: false,\r\n        }\r\n    }\r\n\r\n    onPersonNameChange = (e) => {\r\n        const personName = e.target.value;\r\n        this.setState(() => ({ personName }))\r\n    }\r\n\r\n    onPersonMobileChange = (e) => {\r\n        const personMobile = e.target.value;\r\n        this.setState(() => ({ personMobile }))\r\n    }\r\n    onPersonAddressChange = (e) => {\r\n        const personAddress = e.target.value;\r\n        this.setState(() => ({ personAddress }))\r\n    }\r\n    onItemNameChange = (e) => {\r\n        const itemName = e.target.value;\r\n        this.setState(() => ({ itemName }))\r\n    }\r\n    onItemPriceChange = (e) => {\r\n        const itemPrice = e.target.value;\r\n        this.setState(() => ({ itemPrice }))\r\n    }\r\n    onItemQtyChange = (e) => {\r\n        const itemQty = e.target.value;\r\n        this.setState(() => ({ itemQty }))\r\n    }\r\n    onFocusChange = ({ focused }) => {\r\n        this.setState(() => ({ calendarFocused: focused }))\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state)\r\n        if (!this.state.personName || !this.state.personMobile || !this.state.itemPrice || !this.state.itemQty) {\r\n            this.setState(() => ({ error: \"Person Name, mobile and Item price, quantity are mandatory\" }))\r\n        }\r\n        else {\r\n            this.setState(() => (\r\n                { error: '' }\r\n            ))\r\n            this.props.onSubmit({\r\n                personName: this.state.personName,\r\n                personMobile: this.state.personMobile,\r\n                personAddress: this.state.personAddress,\r\n                itemName: this.state.itemName,\r\n                orderDate: moment(),\r\n                itemPrice: parseFloat(this.state.itemPrice),\r\n                itemQty: this.state.itemQty,\r\n                itemStatus: OrderStatus.OrderStatus.ORDER_RECEIVED\r\n\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : 'Add Delivery Order'\r\n        const removeButton = this.props.title ? <button onClick={this.props.onRemove} className=\"btn btn-danger text-right\">Remove Order</button> : ''\r\n        const buttonString = this.props.title ? 'Update the Order' : 'Add Delivery Order'\r\n        \r\n        return (\r\n\r\n\r\n            <div className=\"container\" style={{ width: '60%' }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <i className=\"fa fa-plus-circle\"></i> {title}\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"alert alert-danger\">\r\n                                    {this.state.error && <p>{this.state.error}</p>}\r\n                                </div>\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Name</label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter the Person Name\"\r\n                                            autoFocus\r\n                                            value={this.state.personName}\r\n                                            onChange={this.onPersonNameChange} required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Mobile</label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter the Person Mobile\"\r\n                                            value={this.state.personMobile}\r\n                                            onChange={this.onPersonMobileChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"message\">Address</label>\r\n                                        <textarea className=\"form-control\" id=\"message\" rows=\"3\" value={this.state.personAddress}\r\n                                            onChange={this.onPersonAddressChange}\r\n                                            placeholder=\"Enter the Address\" required></textarea>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Item Name</label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter the Item Name\"\r\n                                            value={this.state.itemName}\r\n                                            onChange={this.onItemNameChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Item Price</label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter the Item Price\"\r\n                                            value={this.state.itemPrice}\r\n                                            onChange={this.onItemPriceChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"email\">Item Quantity</label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter the Item Quantity\"\r\n                                            value={this.state.itemQty}\r\n                                            onChange={this.onItemQtyChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"mx-auto\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary text-right\">{buttonString}</button>\r\n\r\n\r\n\r\n                                        {removeButton}\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default OrderForm;","\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addOrder } from '../redux/actions/orderActions';\r\nimport OrderForm from './OrderForm';\r\n\r\nclass CreateOrder extends Component {\r\n   \r\n\r\n    onSubmit = (order) => {\r\n        this.props.addOrder(order)\r\n        this.props.history.push('/')\r\n    } \r\n    render() {\r\n        return (\r\n            <div>\r\n                <OrderForm onSubmit = {this.onSubmit} />\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nconst mapDispatchtoProps = (dispatch) => ({\r\n    addOrder : (order) => dispatch(addOrder(order))\r\n})\r\n\r\n\r\n\r\nexport default connect(undefined,mapDispatchtoProps)(CreateOrder);","import React, { Component } from 'react'\r\n\r\nimport moment from 'moment'\r\nimport numeral from 'numeral'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport * as  OrderStatus from '../OrderStatus'\r\nimport indian from 'indian-number-format'\r\n\r\n\r\n\r\nclass OrderListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.renderIcon = this.renderIcon.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    renderIcon(data) {\r\n\r\n\r\n        if (data.data === OrderStatus.OrderStatus.ORDER_RECEIVED) {\r\n            return <span className=\"label label-success\">{data.data}</span>\r\n        } if (data.data === OrderStatus.OrderStatus.ORDER_COMPLETED) {\r\n            return <span className=\"label label-info\">{data.data}</span>\r\n        } if (data.data === OrderStatus.OrderStatus.ORDER_DELIVERED) {\r\n            return <span className=\"label label-warning\">{data.data}</span>\r\n        } if (data.data === OrderStatus.OrderStatus.ORDER_IN_PROCESS) {\r\n            return <span className=\"label label-important\">{data.data}</span>\r\n        }\r\n    }\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <tr>\r\n                <td><Link to={`/edit/${this.props.id}`}>\r\n                    {this.props.personName}\r\n                </Link> </td>\r\n                <td>{this.props.itemName}</td>\r\n                <td>\r\n                    {moment(this.props.orderDate).format('MMM Do, YYYY')}\r\n                </td>\r\n                {/* <td>\r\n                    &#8377; {numeral(this.props.itemPrice).format('0,0.00')}\r\n                    </td> */}\r\n\r\n                <td>\r\n                    &#8377; {indian.format(this.props.itemPrice)}\r\n                </td>\r\n                <td>{this.props.itemQty}</td>\r\n                <td>\r\n                    {this.renderIcon({ data: this.props.itemStatus })}\r\n\r\n                </td>\r\n                <td><Link to={`/summary/${this.props.id}`}>\r\n                <i class=\"fa fa-print\" aria-hidden=\"true\"></i>\r\n\r\n                </Link> </td>\r\n\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect()(OrderListItem)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport selector from '../redux/selector'\r\nimport OrderListItem from './OrderListItem'\r\n\r\nconst OrderList = (props) => (\r\n\r\n    <div className=\"row\" style={{ marginBottom: \"20px\" }}>\r\n        <div className=\"col\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-primary text-white\"><i className=\"fa fa-cart-plus\"></i> Order Details\r\n                            </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <table className=\"table table-striped table-condensed\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Person Name</th>\r\n                                <th>Item</th>\r\n                                <th>Order date</th>\r\n                                <th>Price</th>\r\n                                <th>Qty</th>\r\n                                <th>Status</th>\r\n                                <th>Summary</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {props.orders.map((order) => (\r\n                                <OrderListItem key={order.id} {...order} />\r\n                            ))}\r\n\r\n\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: selector(state.orders, state.filters)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrderList)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setItemNameFilter, setOrderDateFilter, setPersonMobileFilter, setPersonNameFilter, setPersonAddressFilter, sortByItemPrice, sortByPersonName, sortByOrderDate, sortByItemName } from '../redux/actions/filterActions'\r\nimport moment from 'moment'\r\n\r\n\r\nconst Search = (props) => (\r\n\r\n\r\n    <div className=\"row\" style={{ marginBottom: \"20px\" }}>\r\n        <div className=\"col\">\r\n\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-primary text-white\"><i className=\"fa fa-cart-plus\"></i> Search Orders\r\n                            </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\" style={{ marginBottom: '5px' }}>\r\n                            <div className=\"col\">\r\n\r\n\r\n                                <form className=\"form-inline\">\r\n                                    <label> Person Name </label> &nbsp;&nbsp;\r\n                                    <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"\r\n                                        onChange={(e) => {\r\n                                            props.dispatch(setPersonNameFilter(e.target.value))\r\n                                        }} />\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <form className=\"form-inline\">\r\n                                    <label> Order Date </label> &nbsp;&nbsp;\r\n                                    {/* <DatePicker onChange={date => props.dispatch(setOrderDateFilter(date))\r\n                                    }\r\n                                     /> */}\r\n\r\n                                    <input className=\"form-control\" type=\"date\" placeholder=\"Search\" aria-label=\"Search\"\r\n                                        onChange={(e) => {\r\n\r\n                                            console.log(moment(e.target.value))\r\n                                            props.dispatch(setOrderDateFilter(moment(e.target.value)))\r\n                                        }} />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" style={{ marginBottom: '5px' }}>\r\n                            <div className=\"col\">\r\n                                <form className=\"form-inline\">\r\n                                    <label> Item Name </label> &nbsp;&nbsp;\r\n                                    <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"\r\n                                        onChange={(e) => {\r\n                                            console.log(e.target.value)\r\n                                            props.dispatch(setItemNameFilter(e.target.value))\r\n                                        }} />\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <form className=\"form-inline\">\r\n                                    <label> Mobile </label> &nbsp;&nbsp;\r\n                                    <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"\r\n                                        onChange={(e) => {\r\n                                            console.log(e.target.value)\r\n                                            props.dispatch(setPersonMobileFilter(e.target.value))\r\n                                        }} />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" style={{ marginBottom: '5px' }}>\r\n                            <div className=\"col\">\r\n                                <form className=\"form-inline\">\r\n                                    <label> Address </label> &nbsp;&nbsp;\r\n                                    <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"\r\n                                        onChange={(e) => {\r\n                                            console.log(e.target.value)\r\n                                            props.dispatch(setPersonAddressFilter(e.target.value))\r\n                                        }} />\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <form className=\"form-inline\">\r\n                                    <label> Sort By </label> &nbsp;&nbsp;\r\n                    <select className=\"browser-default custom-select\"\r\n                                        value={props.filters.sortBy}\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === 'OrderDate') {\r\n                                                props.dispatch(sortByOrderDate());\r\n                                            } else if (e.target.value === 'Price') {\r\n                                                props.dispatch(sortByItemPrice())\r\n                                            } else if (e.target.value === 'Person Name') {\r\n                                                props.dispatch(sortByPersonName())\r\n                                            } else if (e.target.value === 'Item Name') {\r\n                                                props.dispatch(sortByItemName())\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <option selected>Choose Sort By</option>\r\n                                        <option value=\"OrderDate\">OrderDate</option>\r\n                                        <option value=\"Price\">Price</option>\r\n                                        <option value=\"Person Name\">Person Name</option>\r\n                                        <option value=\"Item Name\">Item Name</option>\r\n\r\n                                    </select>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        filters: state.filters\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Search)\r\n","import React from 'react'\r\nimport OrderList from './OrderList'\r\nimport Search from './Search'\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <div className=\"container\" style={{ width: '80%' }}>\r\n\r\n            <Search />\r\n            <OrderList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\n\r\nconst Footer = () => (\r\n\r\n    <div className=\"bottom section-padding\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-12 text-center\">\r\n\t\t\t\t\t\t<div className=\"copyright\">\r\n\t\t\t\t\t\t\t<p>© <span>2020</span> <a href=\"#\" className=\"transition\">Ramakrishnan</a> All rights reserved.</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n)\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nconst Help = () => (\r\n    <div>\r\n        <h1>Help Page</h1> \r\n    </div>\r\n)\r\n\r\nexport default Help","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst NotFoundPage = () => (\r\n  <div class=\"page-wrap d-flex flex-row align-items-center\">\r\n  <div class=\"container\">\r\n      <div class=\"row justify-content-center\">\r\n          <div class=\"col-md-12 text-center\">\r\n              <span class=\"display-1 d-block\">404</span>\r\n              <div class=\"mb-4 lead\">The page you are looking for was not found.</div>\r\n              <NavLink className=\"nav-link\" to=\"/\" activeClassName=\"is-active\">\r\n          <i className=\"fa fa-home\"></i> Back to Home </NavLink>\r\n             \r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n\r\nexport default NotFoundPage","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { editOrder, removeOrder } from '../redux/actions/orderActions'\r\nimport OrderForm from './OrderForm'\r\n\r\n\r\nclass EditOrder extends React.Component {\r\n\r\n    onSubmit = (order) => {\r\n        this.props.editOrder(this.props.order.id, order)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    onRemoveOrder = () => {\r\n       \r\n        this.props.removeOrder(this.props.order.id)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n\r\n                <OrderForm title='Edit Delivery Order'\r\n                    order={this.props.order}\r\n                    onSubmit={this.onSubmit}\r\n                    onRemove = {this.onRemoveOrder}\r\n                />\r\n             \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, oldProps) => ({\r\n    order: state.orders.find((order) => order.id === oldProps.match.params.id)\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => ({\r\n    editOrder: (id, order) => dispatch(editOrder(id, order)),\r\n    removeOrder: (id) => dispatch(removeOrder(id))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOrder)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport OrderList from './OrderList'\r\nimport Search from './Search'\r\nimport numwords from 'num-words'\r\n\r\nfunction OrderSummary(props) {\r\n\r\n    if(!props.order){\r\n        props.history.push('/')\r\n        return null;\r\n    }\r\n    console.log(\" order : \",props.order)\r\n    const total = Math.floor(props.order.itemPrice * props.order.itemQty)\r\n    console.log(total)\r\n\r\n    \r\n    return (\r\n\r\n        <section className=\"content content_content\" style={{ width: \"70%\", margin: \"auto\" }}>\r\n            <section className=\"invoice\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-12\">\r\n                        <h2 className=\"page-header\">\r\n                            <i className=\"fa fa-globe\"></i> Delivery App.\r\n                                    <small className=\"pull-right\">   </small>\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row invoice-info\">\r\n                    <div className=\"col-sm-4 invoice-col\">\r\n                        From\r\n                                <address>\r\n                            <strong> </strong>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-sm-4 invoice-col\">\r\n                        To\r\n                                <address>\r\n                            <strong>\r\n                                {props.order.personName}\r\n                            </strong>\r\n                            <br />\r\n                                    Address:\r\n                                    {props.order.personAddress}\r\n                                </address>\r\n                    </div>\r\n                    <div className=\"col-sm-4 invoice-col\">\r\n                        <b>Invoice </b><br />\r\n                        <br />\r\n                        <b>Order ID:</b> {props.order.id}<br />\r\n                       \r\n                            </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-12 table-responsive\">\r\n                        <table className=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Item Name</th>\r\n                                    <th>Qty</th>\r\n                                    <th>Price</th>\r\n                                    <th>Item Total</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n\r\n                                <tr>\r\n                                    <td>{props.order.itemName}</td>\r\n                                    <td>{props.order.itemQty}</td>\r\n                                    <td>{props.order.itemPrice}</td>\r\n                                    <td>{props.order.itemPrice * props.order.itemQty}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      \r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n\r\n\r\n                                    <tr>\r\n                                        <th>Total:</th>\r\n                                        <td><blink> <b>{numwords(total).toUpperCase()} RUPEES</b></blink></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, oldProps) => ({\r\n    order: state.orders.find((order) => order.id === oldProps.match.params.id)\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps)(OrderSummary)\r\n","import React from 'react'\r\nimport {BrowserRouter, Route,Switch} from 'react-router-dom'\r\nimport MenuHeader from './MenuHeader'\r\n\r\nimport CreateOrder from '../components/CreateOrder'\r\nimport Dashboard from '../components/Dashboard'\r\nimport Footer from './Footer'\r\nimport Help from '../components/Help'\r\nimport Page404 from '../components/Page404'\r\nimport EditOrder from '../components/EditOrder'\r\nimport OrderSummary from '../components/OrderSummary'\r\n\r\nconst Routers = () =>(\r\n<BrowserRouter>\r\n  <div>\r\n  <MenuHeader/>\r\n  <Switch>\r\n    <Route path=\"/\" component={Dashboard} exact={true}/>\r\n    <Route path=\"/create\" component={CreateOrder}/>\r\n     <Route path=\"/edit/:id\" component={EditOrder}/>\r\n     <Route path=\"/summary/:id\" component={OrderSummary}/>\r\n    <Route path=\"/help\" component={Help}/>\r\n    <Route component={Page404} /> \r\n  </Switch>\r\n  <Footer/>\r\n  </div>\r\n  </BrowserRouter>\r\n)\r\n\r\nexport default Routers","import React from 'react';\r\n\r\nclass TestLifeCycle extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n         data: 0\r\n      }\r\n      this.setNewNumber = this.setNewNumber.bind(this)\r\n   };\r\n   setNewNumber() {\r\n      this.setState({data: this.state.data + 1})\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n            <button onClick = {this.setNewNumber}>INCREMENT</button>\r\n            <Content myNumber = {this.state.data}></Content>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nclass Content extends React.Component {\r\n   componentWillMount() {\r\n      console.log('Component WILL MOUNT!')\r\n   }\r\n   componentDidMount() {\r\n      console.log('Component DID MOUNT!')\r\n   }\r\n   componentWillReceiveProps(newProps) {    \r\n      console.log('Component WILL RECIEVE PROPS!')\r\n   }\r\n   shouldComponentUpdate(newProps, newState) {\r\n      return true;\r\n   }\r\n   componentWillUpdate(nextProps, nextState) {\r\n      console.log('Component WILL UPDATE!');\r\n   }\r\n   componentDidUpdate(prevProps, prevState) {\r\n      console.log('Component DID UPDATE!')\r\n   }\r\n   componentWillUnmount() {\r\n      console.log('Component WILL UNMOUNT!')\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n            <h3>{this.props.myNumber}</h3>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nexport default TestLifeCycle;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport ReduxTest from './redux/ReduxTest';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './redux/store'\r\nimport Routers from './Routes/Routers';\r\nimport TestLifeCycle from './components/TestLifeCycle';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div>\r\n      {/* <ReduxTest/> */}\r\n      <Routers/>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}